// 상수는 const 키워드 사용 및 대문자로 선언
const PI: f32 = 3.141592;

fn main() {

    // 기본이 immutable
    // mut 키워드를 붙여야 mutable로 사용 가능
    let mut x = 3;
    println!("x의 값은 {x}입니다.");

    x = 7;

    println!("x의 값은 {}입니다.", x);

    // ======================================
    // variable shadowing
    // 변수롤 재 선언 가능하다. 다시 선언하면 새롭게 선언한 변수로 '가려져서' 바뀌게 된다.

    let y = 3;
    println!("y의 값은 {y}입니다.");

    let y = y + 1;
    println!("y의 값은 {y}입니다.");

    // 블럭을 열어서 자유롭게 스코프를 생성할 수 있다.
    // 해다 위치에서 동일한 이름의 변수를 선언할 수 있다.
    // shadowing 되었기 때문에 이전 까지의 값 4에 2를 곱해서 새롭게 할당했지만
    // 스코프가 끝나면 바뀐 값은 사라지고 이전에 선언했던 4의 값ㅇ로 돌아오게 된다.
    // 즉, '가려진다'라는 개념이 적용되었기에 스코프가 끝나면 이 전 스코프의 값을 유지하게 된다.
    {
        let y = y * 2;
        println!("안쪽 범위에서 y의 값은 {y}입니다.");
    }

    println!("y의 값은 {y}입니다.");

}
